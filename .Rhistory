devtools::load_all()
?PowerEval
devtools::load_all()
devtools::install()
devtools::document()
devtools::install()
?PowerEval
?PowerEval
devtools::document()
devtools::load_all()
devtools::install()
?PowerEval
devtools::document()
devtools::load_all()
?PowerEval
source("C:/Users/dd284/OneDrive/harry/m6a_power/PlotAll.R")
source("C:/Users/dd284/OneDrive/harry/m6a_power/PlotAll.R")
source("C:/Users/dd284/OneDrive/harry/m6a_power/PlotAll.R")
source("C:/Users/dd284/OneDrive/harry/m6a_power/PlotAll.R")
source("C:/Users/dd284/OneDrive/harry/m6a_power/PlotAll.R")
?save
?plot
devtools::document()
gc()
devtools::document()
devtools::document()
devtools::install()
install.packages("Rtools")
devtools::install()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
?PowerEval
?PlotAll
devtools::document()
devtools::install()
?PowerEval
?WriteToxlsx
?WriteToxlsx_strata
?PlotAll
?PowerEval
??PowerEval
setwd("C:/Users/dd284/OneDrive/harry/m6a_power/result_exomePeak2")
##############cutoffs
library(ggplot2)
pdf("Cutoffs.pdf")
cutoffs = data.frame(mean_inputs = c(13.33333, 22.33333, 29.54167,
14.5, 21.5, 29.0,
10.66667, 21.58333, 35.00000,
10.33333, 20.16667, 27.50000,
10.58333, 21.16667, 26.62500,
12.83333, 21.00000, 31.66667,
13.08333, 22.16667, 23.91667,
13.12500, 23.33333, 29.00000,
17.66667, 23.83333, 31.16667,
10.95833, 20.91667, 31.62500,
10.6, 22.9, 28.7,
9.7, 22.6, 29.9,
15.600, 23.650, 29.875,
10.3, 20.9, 29.7,
12.175, 23.100, 30.150,
11.3, 23.8, 28.3,
11.5, 19.9, 28.7,
11.1, 22.1, 28.4,
10.450, 21.650, 29.725,
10.750, 21.000, 29.425,
10.60714, 22.71429, 29.17857,
11.14286, 23.42857, 29.14286,
11.39286, 22.92857, 32.33929,
11.85714, 21.07143, 28.60714,
13.00000, 23.50000, 32.21429,
10.83929, 22.50000, 29.71429,
11.28571, 22.64286, 28.21429,
9.071429, 20.321429, 27.642857,
10.25000, 21.28571, 28.08929,
11.76786, 23.75000, 30.05357),
sample_size = rep(c("3 replicates","5 replicates","7 replicates"), each = 10),
quantiles = rep(c("Q1", "Q2", "Q3"), 30))
ggplot(cutoffs, aes(x = sample_size, y = mean_inputs, fill = quantiles))+
geom_boxplot(outlier.shape = NA)+
geom_point(position=position_jitterdodge())+
theme_classic()
dev.off()
?TRESS
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
usethis::use_package("GenomicRanges", "TRESS", "AnnotationDbi", "Rsamtools", "purrr", "Matrix", "matrixStats", RColorBrewer"")
usethis::use_package("GenomicRanges", "TRESS", "AnnotationDbi", "Rsamtools", "purrr", "Matrix", "matrixStats", "RColorBrewer", "reshape2", "BiocParallel", "openxlsx", "dplyr", "DESeq2")
usethis::use_package(c("GenomicRanges", "TRESS", "AnnotationDbi", "Rsamtools", "purrr", "Matrix", "matrixStats", "RColorBrewer", "reshape2", "BiocParallel", "openxlsx", "dplyr", "DESeq2"))
usethis::use_package("GenomicRanges")
usethis::use_package("TRESS")
usethis::use_package("AnnotationDbi")
usethis::use_package("Rsamtools")
usethis::use_package("purrr")
usethis::use_package("Matrix")
usethis::use_package("matrixStats")
usethis::use_package("RColorBrewer")
usethis::use_package("reshape2")
usethis::use_package("BiocParallel")
usethis::use_package("openxlsx")
usethis::use_package("dplyr")
usethis::use_package("DESeq2")
list.files()
files <- list.files("./R", pattern = "*.R")
for (file in files) {
text <- readLines(file)
matches <- grep("library(aod)", text, value = TRUE)
if (length(matches) > 0) {
print(paste(file, "contains the search term"))
}
}
files <- list.files("./R", pattern = "*.R")
for (file in files) {
text <- readLines(paste0("./R/",file))
matches <- grep("library(aod)", text, value = TRUE)
if (length(matches) > 0) {
print(paste(file, "contains the search term"))
}
}
usethis::use_package("aod")
devtools::use_mit_license()
usethis::use_mit_license()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::build_vignettes()
library(devtools)
?build_vignettes
devtools::build_vignettes()
getwd()
devtools::build_vignettes(pkg = "PAM")
library(devtools)
document()
build_vignettes()
build_vignettes(pkg = "PAM")
build_vignettes(pkg = ".")
use_vignette(name = "PAM", title = ""PAM Package User's Guide"")
use_vignette(name = "PAM", title = 'PAM Package User's Guide')
use_vignette(name = "PAM", title = "PAM Package User's Guide")
?mclapply
?bplapply
devtools::check()
?check
devtools::check(vignettes = F)
?usethis::use_import_from
document()
check()
document()
document()
document()
document()
check()
devtools::document()
devtools::check(vignettes = F)
getwd()
devtools::document()
?bplapply
?dplyr
library(devtools)
document()
document()
check(vignettes = F)
check(vignettes = F)
document()
warnings()
library(purrr)
?split
document()
check(vignettes = F)
document()
check(vignettes = F)
?hist
?abline
??mix.2norm.onlysd
document()
check(vignettes = F)
document()
check(vignettes = F)
install()
document()
install()
install()
check(vignettes = F)
?document
?check
?document
document
?betabin
??betabin
document()
?check
check(document = F, vignettes = F)
check(document = F, vignettes = F)
check(document = F, vignettes = F)
if (!require("BiocManager"))
install.packages("BiocManager")
BiocManager::install("BiocCheck")
library(BiocCheck)
BiocCheck('no-check-vignettes' = F)
?vapply
seq_len(2)
seq_len(6)
?seq_len
seq_len(2,6)
seq(2,6)
if (!requireNamespace("styler", quietly = TRUE)) {
install.packages("styler")
}
?document
styler::style_pkg(transformers = styler::tidyverse_style(indent_by = 4))
document()
BiocCheck('no-check-vignettes' = F)
BiocCheck('no-check-vignettes' = F)
BiocCheck('no-check-vignettes' = F)
install()
library(PAM)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
warnings()
install()
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
?aod::betabin
document()
setwd("C:/Users/dd284/OneDrive/harry/PAM")
document()
install()
library(PAM)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
warnings()
install()
library(PAM)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
setwd("C:/Users/dd284/OneDrive/harry/PAM")
remove.packages("PAM")
install()
library(PAM)
devtools::install()
library(PAM)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
??bplapply
fun <- function(v) {
message("working") ## 10 tasks
sqrt(v)
}
BiocParallel::bplapply(1:10, fun)
setwd("C:/Users/dd284/OneDrive/harry/PAM")
devtools::install()
library(PAM)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
remove.packages("TRESS")
BiocManager::install("TRESS")
library(devtools)
library(devtools)
install.packages("htmltools")
library(devtools)
library(datasetTRES)
#####Required
library(GenomicRanges)
library(TRESS)
library(AnnotationDbi)
library(Rsamtools)
library(purrr)
library(Matrix)
library(matrixStats)
library(RColorBrewer)
library(reshape2)
library(BiocParallel)
library(openxlsx)
library(dplyr)
library(DESeq2)
library(aod)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
#setwd("/Users/daoyuduan/Library/CloudStorage/OneDrive-Personal/harry/m6a_power")
library(miceadds)
source.all(path = "./")
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
#setwd("/Users/daoyuduan/Library/CloudStorage/OneDrive-Personal/harry/m6a_power")
library(miceadds)
source.all(path = "./")
source.all(path = "./")
source.all(path = "./")
##Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)### option to use exomePeak2/TRESS
library(GenomicFeatures)
install.packages("GenomicFeatures")
install.packages("GenomicFeatures")
library(GenomicFeatures)
library(devtools)
library(datasetTRES)
#####Required
library(GenomicRanges)
library(TRESS)
library(AnnotationDbi)
library(Rsamtools)
library(purrr)
library(Matrix)
library(matrixStats)
library(RColorBrewer)
library(reshape2)
library(BiocParallel)
library(openxlsx)
library(dplyr)
library(DESeq2)
library(aod)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
#setwd("/Users/daoyuduan/Library/CloudStorage/OneDrive-Personal/harry/m6a_power")
library(miceadds)
source.all(path = "./")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "TRESS"
)
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "exomePeak2"
)### option to use exomePeak2/TRESS
View(res_all2)
save(res_all2, "res_all2.rdata")
save(res_all2, file = "res_all2.rdata")
library(devtools)
library(datasetTRES)
#####Required
library(GenomicRanges)
library(TRESS)
library(AnnotationDbi)
library(Rsamtools)
library(purrr)
library(Matrix)
library(matrixStats)
library(RColorBrewer)
library(reshape2)
library(BiocParallel)
library(openxlsx)
library(dplyr)
library(DESeq2)
library(aod)
####
setwd("C:/Users/dd284/OneDrive/harry/m6a_power")
#setwd("/Users/daoyuduan/Library/CloudStorage/OneDrive-Personal/harry/m6a_power")
library(miceadds)
source.all(path = "./")
###Main function
power.test = PowerEval(
Input.file = c("Ctrl1.chr1.input.bam", "Ctrl2.chr1.input.bam","Case1.chr1.input.bam", "Case2.chr1.input.bam"),
IP.file = c("Ctrl1.chr1.ip.bam", "Ctrl2.chr1.ip.bam","Case1.chr1.ip.bam", "Case2.chr1.ip.bam"),
BamDir = "./data/GSE46705_split_chr",
annoDir = "./data/annotation/hg18_chr1.sqlite",
variable = rep(c("Ctrl", "Trt"), each = 2),
bam_factor = 0.08,
nsim = 10,
N.reps = c(2,3),
depth_factor = c(1,2),
thres = c(0.01, 0.05, 0.1)
,Test_method = "exomePeak2"
)### option to use exomePeak2/TRESS
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("AnnotationHubData")
AnnotationHubData::makeAnnotationHubMetadata
？AnnotationHubData::makeAnnotationHubMetadata
?AnnotationHubData::makeAnnotationHubMetadata
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RNAseqData.HNRNPC.bam.chr14")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SCLCBam")
library(SCLCBam)
getPathBamFolder()
cat(SCLCBam:::.wrap(getPathBamFolder()))
paths <- readRDS("C:/Users/dd284/AppData/Local/R/win-library/4.2/SCLCBam/help/paths.rds")
features <- readRDS("C:/Users/dd284/AppData/Local/R/win-library/4.2/SCLCBam/Meta/features.rds")
vignette <- readRDS("C:/Users/dd284/AppData/Local/R/win-library/4.2/SCLCBam/Meta/vignette.rds")
View(vignette)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TBX20BamSubset")
getwd()
TBX20BamSubset::getBamFileList()
getwd()
